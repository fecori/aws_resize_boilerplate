{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS in Action: Lambda",
    "Parameters": {
      "ImageS3Bucket": {
        "Description": "Bucket that is created for uploading images into.",
        "Type": "String"
      },
      "ImageS3ResizedBucket": {
        "Description": "Bucket that lambda will upload to. Has to be different to avoid an infinite loop. (not auto created)",
        "Type": "String"
      },
      "LambdaS3Bucket": {
        "Description": "Temporary bucket that contains the source code of your Lambda function as a zip file.",
        "Type": "String"
      },
      "ResizedBucketCustomPath": {
        "Description": "Path to upload at the ImageS3ResizedBucket. Must end with '/'.",
        "Type": "String"
      },
      "UploadsUserIAM": {
        "Description": "The IAM arn of the user allowed to do direct put uploads to the new bucket. e.g.: 'arn:aws:iam::007:user/james_bond'",
        "Type": "String"
      }
    },
    "Resources": {
      "OriginalS3Bucket": {
        "Type": "AWS::S3::Bucket",
        "Properties": {
          "BucketName": {"Ref": "ImageS3Bucket"},
          "CorsConfiguration": {
            "CorsRules" : [{
              "AllowedHeaders": ["*"],
              "AllowedMethods": ["PUT"],
              "AllowedOrigins": ["*"]
            }]
          },
          "NotificationConfiguration": {
            "LambdaConfigurations": [{
              "Event": "s3:ObjectCreated:*",
              "Function": {"Fn::GetAtt": ["Lambda", "Arn"]}
            }]
          }
        }
      },
      "OriginalS3BucketPolicy" : {
        "Type" : "AWS::S3::BucketPolicy",
        "Properties" : {
          "Bucket" : {"Ref": "ImageS3Bucket"},
          "PolicyDocument": {
            "Statement": [{
              "Effect": "Allow",
              "Principal": {"AWS": {"Ref": "UploadsUserIAM"}},
              "Action": ["s3:PutObject","s3:PutObjectAcl"],
              "Resource": [{"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "ImageS3Bucket"}, "/*"]]}]
            }]
          }
        }
      },
      "LambdaRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Principal": { "Service": "lambda.amazonaws.com" },
              "Action": ["sts:AssumeRole"]
            }]
          },
          "Path": "/",
          "Policies": [{
            "PolicyName": "logs",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [{
                "Effect": "Allow",
                "Action": ["logs:*"],
                "Resource": "arn:aws:logs:*:*:*"
              }]
            }
          }, {
            "PolicyName": "allow-lambda-download-orignal-s3-bucket",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [{
                "Effect": "Allow",
                "Action": ["s3:GetObject"],
                "Resource": [{"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "ImageS3Bucket"}, "/*"]]}]
              }]
            }
          }, {
            "PolicyName": "allow-lambda-upload-to-s3-resized-bucket",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [{
                "Effect": "Allow",
                "Action": ["s3:PutObject"],
                "Resource": [{"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "ImageS3ResizedBucket"}, "/*"]]}]
              }]
            }
          }]
        }
      },
      "Lambda": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": {"Ref": "LambdaS3Bucket"},
            "S3Key": "lambda.zip"
          },
          "Description": "generic hanlder",
          "Handler": "index.handler",
          "MemorySize": 256,
          "Role": {"Fn::GetAtt": ["LambdaRole", "Arn"]},
          "Runtime": "nodejs6.10",
          "Timeout": 20,
          "Environment": {
            "Variables": {
              "RESIZED_S3_BUCKET": {"Ref": "ImageS3ResizedBucket"},
              "RESIZED_S3_BUCKET_CUSTOM_PATH": {"Ref": "ResizedBucketCustomPath"}
            }
          }
        }
      },
      "LambdaPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:invokeFunction",
          "FunctionName": {"Fn::GetAtt": ["Lambda", "Arn"]},
          "Principal": "s3.amazonaws.com",
          "SourceArn": {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "ImageS3Bucket"}]]}
        }
      }
    }
  }
  